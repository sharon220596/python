# Example 1: Break - Finding first even number
numbers = [1, 3, 5, 8, 9, 12]
for num in numbers:
    if num % 2 == 0:
        print(f"First even number: {num}")
        break

# Example 2: Continue - Skip negative numbers
data = [-2, 5, -1, 8, -3, 10]
for value in data:
    if value < 0:
        continue  # Skip negative values
    print(f"Processing: {value}")

# Example 3: AI training with early stopping
for epoch in range(100):
    accuracy = train_model()  # Simulate training
    if accuracy > 0.95:
        print(f"Early stopping at epoch {epoch}")
        break
    
# Example 4: Simple counting
for i in range(5):
    print(f"Count: {i}")

# Example 5: AI training simulation
for epoch in range(10):
    print(f"Training epoch {epoch + 1}/10")
    
# Example 6: Processing data points
data_points = [1, 2, 3, 4, 5]
for point in data_points:
    processed = point * 2
    print(f"Processed: {processed}")

# With loops - elegant and efficient
for i in range(100):
    print("Training AI model...")
# Example 7: Simple counter
count = 0
while count < 5:
    print(f"Count: {count}")
    count += 1  # Important: update the counter!

# Example 8: AI model accuracy check
accuracy = 0.5
while accuracy < 0.9:
    print(f"Current accuracy: {accuracy}")
    # Simulate training improvement
    accuracy += 0.1

# Example 9: User input validation
user_input = ""
while user_input != "quit":
    user_input = input("Enter command (or 'quit' to exit): ")
    print(f"You entered: {user_input}")

# Example 10: Multiplication table
for i in range(1, 4):
    for j in range(1, 4):
        print(f"{i} x {j} = {i * j}")
    print("---")

# Example 11: Processing 2D data (AI image processing)
image_data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
for row in image_data:
    for pixel in row:
        processed_pixel = pixel * 2  # Simple processing
        print(processed_pixel, end=" ")
    print()  # New line after each row

# Example 12: Enumerate and zip functions
names = ["Alice", "Bob", "Charlie"]
scores = [85, 92, 78]

# Using enumerate
for index, name in enumerate(names):
    print(f"{index + 1}. {name}")

# Using zip
for name, score in zip(names, scores):
    print(f"{name}: {score}")
    
    
