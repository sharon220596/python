import csv
from collections import defaultdict

class SalesAnalyzer:
    def __init__(self, filename):
        self.filename = filename
        self.data = []
        self.load_data()

    def load_data(self):
        """Load CSV data into self.data"""
        with open(self.filename, newline="") as file:
            reader = csv.DictReader(file)
            self.data = [row for row in reader]

    def calculate_revenue(self):
        """Calculate total revenue = price * quantity"""
        total = 0
        for row in self.data:
            total += int(row['price']) * int(row['quantity'])
        return total

    def top_products(self):
        """Find best-selling products by total sales value"""
        sales = defaultdict(int)
        for row in self.data:
            sales[row['product']] += int(row['price']) * int(row['quantity'])
        return sorted(sales.items(), key=lambda x: x[1], reverse=True)

    def sales_by_region(self):
        """Group sales revenue by region"""
        region_sales = defaultdict(int)
        for row in self.data:
            region_sales[row['region']] += int(row['price']) * int(row['quantity'])
        return dict(region_sales)

    def create_visualizations(self):
        """Generate simple text charts"""
        region_sales = self.sales_by_region()
        print("\n Sales by Region:")
        for region, revenue in region_sales.items():
            print(f"{region}: {'#' * (revenue // 500)} ({revenue})")

    def generate_report(self):
        """Generate full summary report"""
        print("====== Sales Report ======")
        print(f"Total Revenue: ${self.calculate_revenue()}")
        print("\nTop Products:")
        for product, revenue in self.top_products():
            print(f"  {product}: ${revenue}")
        self.create_visualizations()
        print("==========================")



analyzer = SalesAnalyzer("sales_data.csv")
analyzer.generate_report()
